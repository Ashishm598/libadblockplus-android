stages:
  - build
  - publish

build_libadblockplus-android:arm:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - cd ..
  script:
    - ./gradlew clean assembleAbi_arm

build_libadblockplus-android:arm64:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release
    - cd ..
  script:
    - ./gradlew clean assembleAbi_arm64

build_libadblockplus-android:x86:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release
    - cd ..
  script:
    - ./gradlew clean assembleAbi_x86

build_libadblockplus-android:all:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm64 Configuration=release
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=ia32 Configuration=release
    - cd ..
  script:
    - ./gradlew clean assemble
  artifacts:
    paths:
      - adblock-android-webviewapp/build/outputs/apk/release/adblock-android-webviewapp-release-unsigned.apk
      - adblock-android-webviewapp/build/outputs/apk/debug/adblock-android-webviewapp-debug.apk


build_libadblockplus-android:custom-jni:
  stage: build
  before_script:
    # It seems gitlab does not create fully-fledged .git directory but we utilize .git/info/exclude
    # directly in ensure_dependencies.py and therefore we have to provide the directory path.
    - mkdir -p .git/info
    - ./ensure_dependencies.py
    - cd ./libadblockplus
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release get-prebuilt-v8
    - make TARGET_OS=android ABP_TARGET_ARCH=arm Configuration=release
    - cd ..
  script:
    - LIBABP_SHARED_LIBRARY_NAME=adblockplus ./gradlew clean assembleAbi_arm

build_libadblockplus-android:without-jni:
  stage: build
  # Don't get dependencies because current dependencies are merely libadblockplus but we don't need it.
  # If the parameter is working correctly then the building should succeed without libadblockplus.
  script:
    - SKIP_JNI_COMPILATION=true ./gradlew clean assemble

publish_to_bintray:
  stage: publish
  script:
    - |
      if [[ ${DRY_RUN:-true} == "true" ]] ; then
        echo 'Note: $DRY_RUN is currently "true", run pipeline manually and set to "false" to actually publish to bintray'
      fi
    - echo ./gradlew bintrayUpload -PbintrayUser=${BINTRAY_USERNAME} -PbintrayKey=${BINTRAY_KEY} -PdryRun=${DRY_RUN:-true}
  only:
    - tags